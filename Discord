--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==3) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v16=nil;v0=4;end if (v0==4) then v16=function(v21,v22,...)local v27=0;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;while true do if (v27==2) then v32=function()local v48=0 + 0 ;local v49;local v50;while true do if ((3 -2)==v48) then return (v50 * (458 -202)) + v49 ;end if (v48==(0 -(0 + 0))) then v49,v50=v2(v21,v28,v28 + 2 + 0 );v28=v28 + 2 ;v48=2 -1 ;end end end;v33=nil;v33=function()local v51,v52,v53,v54=v2(v21,v28,v28 + 3 );v28=v28 + 4 + 0 ;return (v54 * (45828498 -29051282)) + (v53 * (142110 -76574)) + (v52 * (232 + 24)) + v51 ;end;v34=nil;v27=3;end if (v27==3) then v34=function()local v55=0 -0 ;local v56;local v57;local v58;local v59;local v60;local v61;while true do if ((8 -5)==v55) then if (v60==((0 -0) -0)) then if (v59==(0 -0)) then return v61 * (261 -(103 + (223 -65))) ;else local v104=1350 -(343 + 1007) ;while true do if (v104==(0 -(0 -0))) then v60=1 + (0 -0) ;v58=621 -(357 + 264) ;break;end end end elseif (v60==(595 + 425 + 1027)) then return ((v59==(0 + (808 -(570 + 238)))) and (v61 * (((8 -5) -2)/(611 -(362 + 249))))) or (v61 * NaN) ;end return v9(v61,v60-(2572 -(450 + 1099)) ) * (v58 + (v59/(((990 -(23 + 84)) -(199 + 682))^(97 -45)))) ;end if (((7 -5) -1)==v55) then v58=871 -(277 + 593) ;v59=(v30(v57,1410 -(1160 + 249) ,(1344 -(494 + 825)) -5 ) * ((4 -2)^32)) + v56 ;v55=(4 + 0) -2 ;end if (v55==(0 -0)) then v56=v33();v57=v33();v55=1;end if (((2971 -(1348 + 547)) -((1498 -(774 + 413)) + 763))==v55) then v60=v30(v57,29 -8 ,140 -109 );v61=((v30(v57,127 -(22 + 73) )==(1 + 0)) and  -(2 -1)) or (1 -(0 -0)) ;v55=5 -2 ;end end end;v35=nil;v35=function(v40)local v62;if  not v40 then v40=v33();if (v40==(341 -(29 + 312))) then return "";end end v62=v4(v21,v28,(v28 + v40) -(2 -1) );v28=v28 + v40 ;local v63={};for v75=769 -(656 + 112) , #v62 do v63[v75]=v3(v2(v4(v62,v75,v75)));end return v7(v63);end;v36=v33;v27=4;end if (v27==4) then v37=nil;v37=function(...)return {...},v13("#",...);end;v38=nil;v38=function()local v64=0 + 0 ;local v65;local v66;local v67;local v68;local v69;local v70;while true do local v77=0;local v78;while true do if (v77~=(0 -0)) then else v78=0;while true do if (v78~=(1738 -(1669 + 69))) then else local v105=0 + 0 ;while true do if (v105~=(0 + 0)) then else if (v64~=1) then else local v111=0 -0 ;local v112;while true do if (v111==(1694 -(772 + 922))) then v112=0 + 0 ;while true do if ((4 -3)==v112) then local v125=0;while true do if (v125~=(1540 -(1118 + 421))) then else v112=2;break;end if (v125==0) then for v135=1,v69 do local v136=0;local v137;local v138;local v139;while true do if (1==v136) then v139=nil;while true do if (v137~=1) then else if (v138==(2 -1)) then v139=v31()~=(0 + 0) ;elseif (v138==(1512 -(28 + 1482))) then v139=v34();elseif (v138==3) then v139=v35();end v70[v135]=v139;break;end if (v137==(0 + 0)) then local v252=1988 -(629 + 1359) ;local v253;while true do if (v252~=(0 + 0)) then else v253=0;while true do if (v253==(2 -1)) then v137=1 + 0 ;break;end if (v253~=(0 -0)) then else local v321=0 + 0 ;while true do if ((0 -0)==v321) then v138=v31();v139=nil;v321=1128 -(222 + 905) ;end if (v321==1) then v253=4 -3 ;break;end end end end break;end end end end break;end if (v136~=0) then else v137=0;v138=nil;v136=1;end end end v68[1049 -(565 + 481) ]=v31();v125=1;end end end if (v112~=(0 -0)) then else v69=v33();v70={};v112=251 -(149 + 101) ;end if (v112~=(4 -2)) then else v64=3 -1 ;break;end end break;end end end if (0~=v64) then else local v113=0 -0 ;local v114;while true do if (v113~=(1751 -(907 + 844))) then else v114=0 -0 ;while true do if (v114~=2) then else v64=1 + 0 ;break;end if (v114~=1) then else v67={};v68={v65,v66,nil,v67};v114=3 -1 ;end if (v114==0) then v65={};v66={};v114=4 -3 ;end end break;end end end v105=1 + 0 ;end if (v105==(4 -3)) then v78=3 -2 ;break;end end end if (v78==(719 -(359 + 359))) then if (v64==(1627 -(1506 + 119))) then local v110=0 -0 ;while true do if (v110==(0 -0)) then for v116=1152 -(1083 + 68) ,v33() do local v117=0;local v118;local v119;while true do if (v117==1) then while true do if (v118~=0) then else v119=v31();if (v30(v119,1489 -(149 + 1339) ,1 -0 )~=0) then else local v129=0;local v130;local v131;local v132;local v133;local v134;while true do if (v129==(1 + 0)) then v132=nil;v133=nil;v129=2;end if (v129==(0 -0)) then v130=0 -0 ;v131=nil;v129=2 -1 ;end if (v129==2) then v134=nil;while true do if (1~=v130) then else local v242=0;while true do if (v242==(2 -1)) then v130=378 -(232 + 144) ;break;end if (v242==(1207 -(627 + 580))) then v133=nil;v134=nil;v242=1;end end end if (v130==(1 + 1)) then while true do if (v131~=(1 + 1)) then else local v281=0;while true do if (v281~=(1 -0)) then else v131=9 -6 ;break;end if (v281==0) then if (v30(v133,501 -(51 + 449) ,1)~=1) then else v134[2]=v70[v134[2]];end if (v30(v133,2,503 -(487 + 14) )~=(1 + 0)) then else v134[3 + 0 ]=v70[v134[411 -(101 + 307) ]];end v281=1;end end end if (v131~=(2 + 1)) then else if (v30(v133,3,3)~=(1 -0)) then else v134[1294 -(415 + 875) ]=v70[v134[615 -(45 + 566) ]];end v65[v116]=v134;break;end if (v131~=1) then else local v283=0 + 0 ;local v284;while true do if (0==v283) then v284=0 -0 ;while true do if (v284==(1 + 0)) then v131=2;break;end if (v284~=0) then else v134={v32(),v32(),nil,nil};if (v132==0) then local v347=0 + 0 ;local v348;while true do if ((0 + 0)~=v347) then else v348=0;while true do if ((0 + 0)~=v348) then else v134[3]=v32();v134[1 + 3 ]=v32();break;end end break;end end elseif (v132==1) then v134[3]=v33();elseif (v132==(40 -(14 + 24))) then v134[2 + 1 ]=v33() -((5 -3)^(723 -(340 + 367))) ;elseif (v132~=(4 -1)) then else local v371=0 -0 ;while true do if (v371~=(0 -0)) then else v134[5 -2 ]=v33() -(2^16) ;v134[4]=v32();break;end end end v284=1 -0 ;end end break;end end end if (v131~=0) then else local v285=0;while true do if (v285==0) then v132=v30(v119,2,1345 -(995 + 347) );v133=v30(v119,4,4 + 2 );v285=1 + 0 ;end if (v285==(1 -0)) then v131=1062 -(690 + 371) ;break;end end end end break;end if (v130==0) then v131=0 + 0 ;v132=nil;v130=1;end end break;end end end break;end end break;end if (v117~=0) then else v118=85 -(67 + 18) ;v119=nil;v117=1 + 0 ;end end end for v120=1,v33() do v66[v120-1 ]=v38();end v110=1;end if (v110~=(132 -(128 + 3))) then else for v122=1 -0 ,v33() do v67[v122]=v33();end return v68;end end end break;end end break;end end end end;v27=5;end if (v27==0) then v28=1;v29=nil;v21=v5(v4(v21,5),"..",function(v41)if (v2(v41,2)==79) then local v85=0;while true do if (v85==0) then v29=v1(v4(v41,1,1));return "";end end else local v86=v3(v1(v41,16));if v29 then local v89=v6(v86,v29);v29=nil;return v89;else return v86;end end end);v30=nil;v27=1;end if (5==v27) then v39=nil;v39=function(v42,v43,v44)local v71=v42[1];local v72=v42[2];local v73=v42[3];return function(...)local v79=0;local v80;local v81;local v82;local v83;local v84;while true do if (2==v79) then v84=nil;v84=function()local v90=v71;local v91=v72;local v92=v73;local v93=v37;local v94={};local v95={};local v96={};for v100=0 + 0 ,v83 do if ((v100>=v92) or (2714>(2730 + 1226))) then v94[v100-v92 ]=v82[v100 + 1 ];else v96[v100]=v82[v100 + (1143 -(150 + 992)) ];end end local v97=(v83-v92) + (1021 -(867 + 153)) ;local v98;local v99;while true do local v101=0 + 0 ;local v102;while true do if (((2164 -(63 + 130))==(737 + 1234)) and (v101==0)) then v102=0 -0 ;while true do if ((v102==(0 -0)) or ((588 -(91 + 129))>=(8665 -5521))) then local v115=0 -0 ;while true do if ((v115==0) or ((222 + 238)>=(7854 -4879))) then local v124=0 -0 ;while true do if (((2836 -(7 + 747))<=(4213 -(917 + 130 + 17))) and (v124==(1472 -(658 + 813)))) then v115=1 -0 ;break;end if (((6335 -3447)>1665) and (v124==(0 -0))) then v98=v90[v80];v99=v98[20 -(11 + 8) ];v124=2 -1 ;end end end if ((v115==(1 + 0)) or ((3738 -2451)>=(3923 -(693 + 1060)))) then v102=1 + 0 + 0 ;break;end end end if ((((3313 + 1580) -1754)==3139) and (v102==1)) then if ((v99<=19) or ((17 + 431)>(2095 -653))) then if ((4053==(1417 + 2636)) and (v99<=(773 -(87 + 677)))) then if ((889==(2176 -(77 + 1210))) and (v99<=(3 + 1))) then if (((16073 -11659)>=2183) and (v99<=(1 -0))) then if ((v99>(0 -0)) or ((4818 -(1270 + 33))==(4807 -(478 + 3 + 43)))) then local v140=1076 -(275 + 801) ;local v141;local v142;while true do if (((4223 -(1674 + (237 -155)))<=(5831 -(147 + 1300))) and ((0 + 0)==v140)) then v141=0 -0 ;v142=nil;v140=1;end if ((4072>(5007 -(1061 + 752))) and (v140==(1 + 0))) then while true do if (((14809 -(13213 -(343 + 1271)))==(5642 -2432)) and (v141==(1331 -(515 + 816)))) then v142=v98[2 + 0 ];v96[v142]=v96[v142](v14(v96,v142 + (807 -(215 + 591)) ,v98[3 + (1862 -(1696 + 166)) ]));break;end end break;end end else local v143=1067 -(838 + 229) ;local v144;local v145;local v146;local v147;while true do if ((v143==(1 + 0)) or ((1200 + 596)>(4499 -(343 + 1368)))) then v146=nil;v147=nil;v143=2;end if (((8394 -4859)>=(3479 -877)) and (v143==(1 + 1 + 0))) then while true do if ((((12901 + 1458) -10018)<=((28182 -22490) -(125 + 4 + 627))) and (v144==1)) then v147=v98[2 + 1 ];for v278=2 -1 ,v147 do v146[v278]=v96[v145 + v278 ];end break;end if (((2354 -(102 + 1434))<=(3062 -(303 + 461))) and (v144==(1250 -(832 + 418)))) then local v257=0 -(0 -0) ;while true do if (((2338 -1040)<(6768 -3016)) and (v257==(1 -0))) then v144=2 -1 ;break;end if ((v257==(0 + 0)) or ((1785 -(800 + 435))==(5921 -(591 + 986)))) then v145=v98[2 -0 ];v146=v96[v145];v257=2 -1 ;end end end end break;end if (((11938 -(6980 + 988))<=(3769 + 253)) and (v143==((0 -0) + 0))) then v144=1294 -(374 + 920) ;v145=nil;v143=2 -1 ;end end end elseif ((v99<=(1129 -((1765 -(506 + 1084)) + 952))) or ((3014 -(190 + 472))<(1055 -459))) then local v148=0;local v149;local v150;local v151;while true do if ((1413<(6191 -((3237 -2339) + 943))) and (v148==(1 + 0))) then v151=nil;while true do if ((v149==(0 -0)) or ((5711 -(2925 -(902 + 205)))<=2699)) then local v258=1176 -(37 + 712 + 427) ;while true do if ((v258==(4 -3)) or ((12320 -9622)<=(2754 -1279))) then v149=1 + 0 ;break;end if ((1630<=1654) and ((1858 -(1524 + 334))==v258)) then local v298=1330 -(1284 + 46) ;while true do if ((v298==0) or (221>(5382 -3126))) then v150=v98[2 + 0 ];v151=v96[v98[11 -8 ]];v298=793 -((722 -337) + 407) ;end if ((v298==1) or ((1179 + 1130)==((6543 -(1877 + 85)) -((271 -104) + 1030)))) then v258=1350 -(683 + 666) ;break;end end end end end if ((v149==(1207 -(7 + 1199))) or ((7018 -3997)==(1207 + 3043))) then v96[v150 + 1 ]=v151;v96[v150]=v151[v98[623 -((439 -323) + 167 + 336) ]];break;end end break;end if ((v148==(0 + 0)) or ((6221 -(691 + 690))<=(1595 -(942 + 56)))) then local v231=1910 -(1830 + 80) ;while true do if (((11854 -7043)>2755) and (v231==1)) then v148=1 + 0 ;break;end if ((v231==(1943 -(1881 + 62))) or ((1119 -(97 + 313))>=((4705 -(283 + 1484)) -(177 + 191)))) then v149=0 -0 ;v150=nil;v231=1 + 0 ;end end end end elseif (((4609 -3169)<=(394 + 1762)) and (v99>(1792 -(1328 + 461)))) then local v189=1425 -((627 -365) + 1163) ;local v190;local v191;local v192;while true do if (((8308 -5446)>=(1267 + 1100)) and (v189==(1 + 0))) then local v243=1203 -(5 + 1198) ;while true do if (((2821 -(687 + 882))<(3137 + 295)) and (v243==(0 + 0))) then v192={};v191=v11({},{__index=function(v286,v287)local v299=(940 -(385 + 555)) + 0 ;local v300;local v301;while true do if ((3995<=4696) and (v299==(789 -(626 + 163)))) then v300=0 -0 ;v301=nil;v299=1683 -(1325 + 357) ;end if ((v299==(1 + 0)) or ((369 -(61 + 113))>=3438)) then while true do if (((2043 -(242 + 1264))<=(13801 -9049)) and (v300==(0 + 0))) then v301=v192[v287];return v301[1673 -(470 + 19 + 1183) ][v301[2]];end end break;end end end,__newindex=function(v286,v287,v288)local v302=0 -0 ;local v303;local v304;local v305;while true do if ((v302==1) or (3117<=(3484 -(1569 + 27)))) then v305=nil;while true do if ((v303==(0 -0)) or (4578<(5156 -1564))) then local v340=0 + 0 ;while true do if (((17150 -13058)>=1114) and (v340==0)) then v304=0;v305=nil;v340=1;end if (((5667 -3598)<=2849) and (v340==((1471 -(530 + 938)) -2))) then v303=2 -1 ;break;end end end if ((v303==(1392 -(1265 + (743 -(99 + 518))))) or (((111 -82) + 93)>(1042 -(38 + 102)))) then while true do if (((1186 + 1064)==(3759 -(217 + 1292))) and (v304==(0 -0))) then v305=v192[v287];v305[1][v305[625 -(560 + 63) ]]=v288;break;end end break;end end break;end if ((v302==(0 + 0)) or (1280>=(3450 -(220 + 212)))) then v303=0 -0 ;v304=nil;v302=(1739 -1214) -(65 + 459) ;end end end});v243=1;end if (((718 + 1179)>(884 + 706)) and (v243==(1 -0))) then v189=691 -(583 + 106) ;break;end end end if (((4232 -2259)<=(3205 -(122 + (31 -24)))) and (v189==2)) then for v262=1366 -(741 + 624) ,v98[9 -5 ] do local v263=409 -(342 + 67) ;local v264;local v265;local v266;while true do if ((1==v263) or ((126 + 721)==(13465 -9701))) then v266=nil;while true do if ((v264==(723 -(24 + 397 + 301))) or ((210 + 652)>3019)) then while true do if (((39 -23)<=(3129 -(52 + 95))) and ((0 + 0)==v265)) then local v341=0;local v342;while true do if ((v341==((3459 -1974) -(811 + 674))) or ((5237 -(1214 + (2121 -1397)))<=(1352 + 27))) then v342=0 -(0 -0) ;while true do if (((1862 -960)>(571 -258)) and (v342==0)) then local v368=0 + 0 ;while true do if (((1391 + 2568)>(5025 -3820)) and (v368==1)) then v342=(41 + 804) -(24 + 820) ;break;end if (((3693 -(1146 + 465))>=((921 + 505) -922)) and ((0 + 0)==v368)) then v80=v80 + 1 ;v266=v90[v80];v368=2 -(3 -2) ;end end end if ((((3253 -(482 + 566)) + 647 + 1258)>=(338 + 327 + 3387)) and (v342==(1 + 0))) then v265=1 + 0 ;break;end end break;end end end if (((8999 -5209)>(576 + 771)) and ((2 -1)==v265)) then if ((v266[1994 -(639 + 450 + (2551 -(623 + 1024))) ]==(3 + 4)) or ((4601 -(13 + 55))<(1021 + 321))) then v192[v262-(1 -0) ]={v96,v266[1 + (9 -7) ]};else v192[v262-(1 + 0) ]={v43,v266[9 -6 ]};end v95[ #v95 + 1 + 0 ]=v192;break;end end break;end if ((v264==(0 + (0 -0))) or ((12028 -8846)<=2746)) then local v324=0 -0 ;while true do if ((v324==(1790 -(1721 + 69))) or ((4702 -(1175 + 597))<=(3843 -(1643 + (1146 -(387 + 431)))))) then v265=0;v266=nil;v324=228 -(70 + (351 -194)) ;end if (((898 -454)<(26 + 207 + 3297)) and (1==v324)) then v264=211 -(198 + 12) ;break;end end end end break;end if ((((3380 + 2442) -1870)>((2860 -(1176 + 158)) + 316)) and (v263==(1860 -((337 -(17 + 180)) + 1720)))) then v264=0 -0 ;v265=nil;v263=1;end end end v96[v98[1519 -(530 + 987) ]]=v39(v190,v191,v44);break;end if ((4178>=2032) and ((237 -(7 + 230))==v189)) then local v245=0;while true do if ((4076>(3214 -600)) and (v245==1)) then v189=4 -3 ;break;end if ((3859>=(880 + 1182)) and (v245==((0 + 0) -0))) then v190=v91[v98[(502 -(250 + 26)) -(45 + 178) ]];v191=nil;v245=1;end end end end else v43[v98[3]]=v96[v98[2]];end elseif ((v99<=(210 -(140 + 64))) or (321>962)) then if ((v99==(4 + 1)) or ((1384 + 2446)==3841)) then local v152=0 + 0 ;local v153;local v154;while true do if (((4179 -(495 + (1743 -(106 + 760))))<=(18051 -14197)) and (v152==(0 -0))) then v153=v98[762 -(625 + 135) ];v154=v96[v153];v152=2 -1 ;end if (((1088 -(310 + 777))==v152) or (4108<931)) then for v238=v153 + (1253 -(764 + 488)) ,v98[2 + 1 ] do v8(v154,v96[v238]);end break;end end else local v155=0;local v156;local v157;local v158;while true do if ((((3733 -(637 + 680)) + 475)<=((5165 -(515 + 157)) -(308 + 683))) and (v155==(0 -0))) then v156=473 -(37 + 436) ;v157=nil;v155=2 -1 ;end if (((4766 -(711 + (1971 -(173 + 1203))))==(4830 -(255 + 1115))) and (v155==(1 -0))) then v158=nil;while true do if ((0==v156) or ((3126 + 545)<=(489 + 532))) then v157=0;v158=nil;v156=(12 -9) -2 ;end if ((747<=((4833 -(1195 + 6)) + 472)) and (v156==1)) then while true do if ((v157==(61 -(39 + (246 -(74 + 150))))) or ((8607 -3937)<=(2394 -1612))) then v158=v98[2];v96[v158](v14(v96,v158 + (4 -3) ,v98[3]));break;end end break;end end break;end end end elseif (((1015 + 3671)>687) and (v99<=(12 -5))) then v96[v98[1995 -(1779 + 214) ]]=v96[v98[8 -5 ]];elseif ((v99>(20 -12)) or ((8778 -6268)<=(3267 -1249))) then if (((1471 -(1292 + 114))==65) and (v96[v98[95 -(86 + 7) ]]==v98[1403 -(868 + 531) ])) then v80=v80 + (3 -2) ;else v80=v98[1820 -(1047 + (2138 -1368)) ];end elseif ( not v96[v98[2 -0 ]] or ((3441 -(65 + 20 + 163))<=(511 + 26))) then v80=v80 + (4 -3) ;else v80=v98[2 + 1 ];end elseif ((v99<=(1524 -(566 + 944))) or (3762<=(10148 -6958))) then if ((v99<=(24 -13)) or ((6850 -3356)<(1813 + 213))) then if ((v99==10) or ((835 + 848)==(967 + 1447))) then if ((v96[v98[1960 -(1914 + 44) ]]~=v96[v98[91 -(28 + 59) ]]) or (708>(6347 -(92 + 4354)))) then v80=v80 + ((906 + 101) -(349 + (1634 -(835 + 142)))) ;else v80=v98[8 -5 ];end else v96[v98[1 + 1 + 0 ]][v98[879 -(478 + 398) ]]=v98[4];end elseif (((1288 -(240 + 502))<(404 + 314)) and (v99<=(50 -38))) then v96[v98[1 + 1 ]]=v43[v98[7 -4 ]];elseif ((((1710 -(678 + 632)) + 4050)==(17178 -12728)) and (v99==(6 + 7))) then v96[v98[(7 -5) -0 ]]=v98[1001 -(779 + 219) ]~=(0 + 0) ;else v96[v98[2]]=v98[936 -(138 + 795) ];end elseif ((((41203 -31585) -5502)>1789) and (v99<=(1620 -(76 + 1528)))) then if ((v99==15) or ((8267 -(2766 + 773))==((22 + 4232) -(888 + 856 + 199)))) then v96[v98[3 -1 ]]();elseif ((4855>=(1210 -(1888 -(635 + 564)))) and (v96[v98[2]]~=v98[2 + 2 ])) then v80=v80 + (4 -3) ;else v80=v98[3];end elseif ((2792==(779 + (3640 -(743 + 884)))) and (v99<=17)) then v96[v98[3 -1 ]]=v96[v98[2 + 1 ]][v98[(54 -40) -10 ]];elseif (((3566 -(830 + 898))>=(1621 -927)) and (v99>(731 -(172 + 541)))) then do return;end else local v200=0 + 0 ;local v201;local v202;local v203;local v204;while true do if ((1831<(12676 -8899)) and (v200==(0 -0))) then v201=0 -0 ;v202=nil;v200=1 + 0 ;end if ((4905>=1115) and (v200==((7 + 2) -7))) then while true do if ((4630>=(3225 + 1262)) and (v201==0)) then local v290=0;while true do if (((0 + 0)==v290) or ((4592 + 114)<=1952)) then v202=0 + 0 ;v203=nil;v290=1;end if (((5984 -(1399 + 206))>=(2415 -(719 + 228))) and (v290==(1 + 0))) then v201=1;break;end end end if ((v201==(3 -2)) or ((8384 -(6051 -(1031 + 512)))>=4575)) then v204=nil;while true do if ((v202==(1 + 0)) or (((4585 -2746) + 1831)<=(1163 + 2267))) then for v325=4 -3 , #v95 do local v326=0 + 0 ;local v327;while true do if ((v326==(0 -0)) or ((3147 -((1902 -(392 + 1488)) + 4))>3433)) then v327=v95[v325];for v349=1370 -(1291 + (291 -212)) , #v327 do local v350=908 -(604 + (1377 -(646 + 427))) ;local v351;local v352;local v353;local v354;while true do if ((v350==(1499 -((2849 -1718) + 368))) or ((2701 -(627 + 871))==2812)) then v351=0 + 0 ;v352=nil;v350=2 -1 ;end if (((1 + 0)==v350) or ((2062 + 54)<=1824)) then v353=nil;v354=nil;v350=2;end if (((2762 + 1821)>((5201 -(143 + 192)) -(843 + 480))) and (v350==(210 -((1792 -(1609 + 1)) + 26)))) then while true do if ((v351==(0 -0)) or (2610<(1754 + 774))) then local v372=0 -0 ;while true do if ((v372==(0 + 0)) or (1358<=(694 -(300 + 4)))) then v352=v327[v349];v353=v352[2 -1 ];v372=1195 -(963 + 231) ;end if ((v372==(1 + (0 -0))) or ((283 + 458)==(2753 -1490))) then v351=395 -(335 + 59) ;break;end end end if (((4781 -(1281 + 28))>2976) and ((3 -2)==v351)) then v354=v352[2];if (((241 + 17)<=3845) and (v353==v96) and (v354>=v203)) then local v375=1244 -(854 + 390) ;local v376;while true do if (((5099 -((1987 -1230) + 762))<4406) and (v375==(0 -0))) then v376=346 -(249 + 97) ;while true do if ((v376==(1506 -(249 + 1257))) or ((1393 -(109 + 35))==(9229 -6376))) then v204[v354]=v353[v354];v352[1 + (1428 -(199 + 1229)) ]=v204;break;end end break;end end end break;end end break;end end end break;end end end break;end if (((6264 -3478)<=(1133 + 1240 + 927)) and (v202==(447 -(335 + 112)))) then local v316=227 -(147 + 80) ;while true do if ((((6649 -3769) + 528)<(2008 + 2050)) and (v316==(1 + 0))) then v202=1 + 0 ;break;end if (((6699 -(1306 + 599))>=(12134 -8683)) and (v316==(0 + 0))) then v203=v98[(2246 -1270) -(639 + 335) ];v204={};v316=1;end end end end break;end end break;end if ((4163>4115) and (1==v200)) then v203=nil;v204=nil;v200=4 -2 ;end end end elseif ((v99<=(456 -(337 + 76 + 14))) or ((2487 + 845 + 18)<(3914 -((2333 -1737) + 180)))) then if (((568 + 3316)>=(2542 -(1172 + 125))) and (v99<=(9 + 15))) then if (((2559 -1579)==980) and (v99<=(6 + 15))) then if ((2646>(1815 -(205 + (619 -(148 + 175))))) and (v99==(1915 -(422 + 1473)))) then local v167=0 -0 ;local v168;local v169;local v170;local v171;local v172;local v173;local v174;while true do if ((v167==(1 + 2)) or ((7428 -4083)==((5448 -(385 + 264)) -(79 + 64 + 61)))) then v174=nil;while true do if ((v168==(685 -(164 + 519))) or ((13800 -9100)<(8070 -3391))) then local v267=0 -0 ;while true do if ((v267==(110 -(108 + 2))) or ((1920 + 497)<=(633 + 779))) then v173=nil;v174=nil;v267=1 + 0 ;end if (((11494 -6845)>(527 + 1128)) and ((1 + 0)==v267)) then v168=23 -((19 -12) + 13) ;break;end end end if (((4120 -(792 + 807))<((13450 -8651) -(439 + 550))) and (v168==((6 -4) -1))) then v171=nil;v172=nil;v168=1376 -(960 + (777 -(163 + 200))) ;end if (((0 + 0)==v168) or ((4005 + 734)>=(3823 + 961))) then local v268=0 -0 ;while true do if ((v268==((1 -0) + 0)) or ((6307 -3445)>=3155)) then v168=1;break;end if ((((1184 + 4283) -2277)<4532) and (v268==(0 -0))) then v169=0 + 0 ;v170=nil;v268=445 -(129 + 315) ;end end end if ((389<((13343 -9098) -(994 + 319))) and (v168==(1 + 2))) then while true do if ((v169==3) or ((365 -(46 + 83))>2261)) then if (v174 or (1161>(7274 -(88 + 2324)))) then local v317=0 -(1451 -(1092 + 359)) ;local v318;while true do if ((v317==0) or ((92 + 384)>=(9114 -6696))) then v318=0 + 0 ;while true do if (((2143 + 46)>(2146 -(218 + 677))) and (v318==(1850 -(619 + 1231)))) then v96[v172]=v174;v80=v98[1096 -(1088 + 5) ];break;end end break;end end else v80=v80 + 1 ;end break;end if ((4513>(2771 + 253)) and (v169==(1494 -(1408 + 40 + 44)))) then local v307=0 -0 ;while true do if ((v307==(1 + 0 + 0)) or ((772 + 1647)<(3682 -(1806 + 75)))) then v169=1 + 2 ;break;end if ((v307==0) or (4756==(4239 -(74 + 174)))) then local v328=0;while true do if ((3012>=(866 -(384 + 442))) and (v328==(1133 -(173 + 959)))) then v307=2 -(774 -(409 + 364)) ;break;end if ((v328==0) or (2244>(12224 -8954))) then for v355=1 + 0 ,v171 do v96[v172 + v355 ]=v173[v355];end v174=v173[1805 -(1046 + 395 + 363) ];v328=1;end end end end end if ((v169==(0 -0)) or (981>=((6039 -(125 + 987)) -(274 + 365)))) then local v308=226 -(191 + (45 -10)) ;local v309;while true do if (((680 -(91 + 300))==(609 -320)) and (v308==(0 + 0))) then v309=0 -0 ;while true do if ((v309==(1 + 0)) or ((4939 -(544 + 11 + 29))==(4810 -(474 + 77)))) then v169=1 + 0 ;break;end if (((2679 -1573)<(1055 + 1857 + 1107)) and (v309==0)) then local v346=0;while true do if ((2460==(2073 + 387)) and (v346==1)) then v309=1891 -(1862 + 28) ;break;end if (((0 + 0)==v346) or ((204 + 632 + 3314)<(12279 -9049))) then v170=v98[2 + 0 ];v171=v98[11 -7 ];v346=1 + 0 + 0 ;end end end end break;end end end if ((v169==(1 + 0)) or ((871 + 2500)<2776)) then local v310=0 + 0 ;while true do if (((5784 -(9 + 1497))<=((985 + 4529) -((2126 -(1099 + 207)) + (1176 -(646 + 504))))) and (0==v310)) then local v329=0;while true do if ((2242>(4191 -2667)) and ((4 -3)==v329)) then v310=2 -1 ;break;end if (((965 + 2213)<(5178 -(1331 + 273))) and (v329==((32 + 27) -(11 + 48)))) then v172=v170 + (853 -(833 + 18)) ;v173={v96[v170](v96[v170 + 1 + 0 ],v96[v172])};v329=1643 -(17 + 60 + 1565) ;end end end if ((1732<((630 + 4045) -1735)) and (1==v310)) then v169=647 -(382 + 263) ;break;end end end end break;end end break;end if (((1599 -(126 + 515))<=(6430 -(940 + 888))) and (v167==((5 -2) -1))) then v172=nil;v173=nil;v167=2 + 1 ;end if ((v167==1) or ((244 + (5343 -(580 + 1092)))<=(121 + 339))) then v170=nil;v171=nil;v167=1 + 1 ;end if ((v167==(0 -0)) or ((1826 + (2672 -1847))==(5901 -(398 + 627)))) then v168=0 + 0 ;v169=nil;v167=1 + (758 -(59 + 699)) ;end end elseif (v96[v98[2]] or ((1196 + 2034)<(9307 -6339))) then v80=v80 + 1 ;else v80=v98[3];end elseif ((v99<=(33 -11)) or ((6387 -(1200 + 300))<(3435 -(1834 + 86)))) then if (((1078 -(99 + 239))<=(2478 -(179 + 490))) and (v98[116 -(89 + 25) ]==v96[v98[19 -(14 + 1) ]])) then v80=v80 + ((1877 -(357 + 589)) -((687 -358) + 601)) ;else v80=v98[(9 -7) + 1 ];end elseif ((3421<(6380 -(1318 + (142 -(22 + 4))))) and (v99==(785 -(297 + 465)))) then local v207=0;local v208;while true do if ((v207==(0 + 0)) or (2018>=(1845 + 962))) then v208=v98[1366 -(1212 + 152) ];do return v14(v96,v208,v208 + v98[2 + 1 ] );end break;end end else local v209=0 + 0 ;local v210;local v211;local v212;while true do if ((v209==(1617 -(761 + 855))) or ((3336 -2201)>(5694 -(1069 + 829)))) then v212=nil;while true do if (((7404 -4933)<=3423) and ((0 + 0)==v210)) then local v291=0 + 0 + 0 ;while true do if (((16918 -12369)>=(264 + 67)) and (v291==1)) then v210=(2976 -(234 + 864)) -(1821 + 56) ;break;end if ((((6190 -(1082 + 77)) -3274)==(3180 -(1177 + 246))) and (v291==(1613 -(25 + 1588)))) then v211=v98[3];v212=v96[v211];v291=505 -(165 + 339) ;end end end if ((v210==(1 + 0)) or ((2948 + 479)>=(11946 -8064))) then for v311=v211 + (3 -2) ,v98[1828 -(831 + 993) ] do v212=v212   .. v96[v311] ;end v96[v98[1 + 1 ]]=v212;break;end end break;end if ((v209==0) or (2737==((1135 + 4907) -1810))) then v210=0 -0 ;v211=nil;v209=1 -(0 -0) ;end end end elseif ((2067<4844) and (v99<=(49 -23))) then if (((5182 -(97 + 529))>3268) and (v99>(25 + 0))) then local v175=1992 -(1405 + 587) ;local v176;while true do if (((5069 -2903)>=218) and (v175==(0 + 0))) then v176=v98[1478 -(1414 + (308 -246)) ];v96[v176]=v96[v176](v96[v176 + (3 -2) ]);break;end end else for v187=v98[2],v98[3] do v96[v187]=nil;end end elseif ((v99<=27) or ((3991 + 877)<(7254 -5048))) then v96[v98[2]][v98[1 + (1377 -(357 + 1018)) ]]=v96[v98[299 -(157 + 138) ]];elseif ((v99==(1070 -(663 + 379))) or ((2496 -1677)>=(9068 -(780 + 3450)))) then local v213=0 + 0 ;local v214;local v215;local v216;while true do if (((5483 -(70 + 1800))>=899) and (v213==(1780 -(1059 + 720)))) then v216=0 -(0 + 0) ;for v269=v214,v98[9 -5 ] do local v270=0 -0 ;while true do if ((3918<(4193 + 715)) and (v270==(0 -0))) then v216=v216 + ((171 + 932) -(212 + 890)) ;v96[v269]=v215[v216];break;end end end break;end if (((0 + 0)==v213) or ((511 + 733)>(4035 -(717 + 333)))) then local v247=190 -(15 + 175) ;while true do if (((986 -(620 + 232))==134) and ((3 -2)==v247)) then v213=1 + 0 ;break;end if ((v247==(459 -(316 + (1522 -(88 + 1291))))) or (609>=3258)) then v214=v98[(7 -3) -2 ];v215={v96[v214](v96[v214 + 1 + 0 ])};v247=1923 -(530 + 1392) ;end end end end elseif ((v96[v98[1962 -(132 + 1828) ]]==v96[v98[1531 -(547 + 980) ]]) or ((11087 -7332)<=(5248 -(1121 + 427)))) then v80=v80 + (1 -0) ;else v80=v98[3];end elseif (((3932 -(199 + 1719))==(3568 -(1118 + 436))) and (v99<=34)) then if ((v99<=(103 -72)) or ((7917 -3568)<=1118)) then if ((v99==(8 + (487 -(171 + 294)))) or (3894==(8035 -5008))) then do return v96[v98[2]];end else v96[v98[5 -3 ]]={};end elseif ((v99<=(407 -(24 + 351))) or (2624<=(582 + 38))) then local v180=0 + 0 ;local v181;while true do if (((1139 + 930)<(5206 -(570 + 246))) and (v180==(0 + 0))) then v181=v98[2 + 0 + 0 ];v96[v181]=v96[v181]();break;end end elseif ((v99>(129 -96)) or (209>=(1106 + 600))) then v80=v98[200 -(7 + (696 -506)) ];else v96[v98[2]]=v96[v98[3 + 0 ]] + v98[4] ;end elseif ((v99<=(1671 -(1246 + 388))) or ((940 -(539 + 207))>=(9584 -6473))) then if ((v99<=((48 + 20) -33)) or (((13448 -(68 + 23)) -8468)<=1385)) then v96[v98[2]]=v44[v98[1898 -(796 + 1099) ]];elseif (((3633 -(530 + (1849 -(346 + 587))))<=(4034 -(157 + 1347))) and (v99>((559 -(373 + 93)) -57))) then local v219=0 + 0 ;local v220;while true do if (((7233 -4622)<((11773 -3915) -4029)) and (v219==(0 -0))) then v220=v98[1 + 1 ];v96[v220](v96[v220 + (1626 -(898 + 727)) + (634 -(508 + 126)) ]);break;end end else v96[v98[(2 + 2) -2 ]]= #v96[v98[(696 + 158) -(544 + 307) ]];end elseif ((v99<=(717 -(616 + 63))) or (2659>=(595 + 2892))) then local v184=510 -(70 + (1422 -(594 + 388))) ;local v185;local v186;while true do if ((v184==(621 -(504 + 116))) or ((9634 -6369)>=(5031 -(864 + 582)))) then while true do if ((v185==(0 + 0)) or ((2510 -1467)<(822 + 26))) then v186=v98[2 -0 ];v96[v186](v14(v96,v186 + (1 -0) ,v81));break;end end break;end if ((v184==0) or (3925==((3140 -(18 + 11)) -1738))) then v185=589 -(380 + 209) ;v186=nil;v184=371 -(281 + 89) ;end end elseif ((v99>39) or (((18314 -14532) + 760)>=4961)) then local v222=0;local v223;local v224;local v225;while true do if ((((3774 -(400 + 981)) -((1658 -(550 + 1087)) + 829))<(3682 -(1331 + 398))) and (v222==(1892 -(1756 + 135)))) then v225=0 -0 ;for v272=v223,v98[4] do local v273=0 + 0 ;local v274;while true do if (((5253 -2797)<(5228 -(267 + 1063))) and (v273==0)) then v274=0 -0 ;while true do if (((1015 -617)<=4409) and (v274==0)) then v225=v225 + 1 + 0 ;v96[v272]=v224[v225];break;end end break;end end end break;end if ((v222==0) or ((2881 + 1674)==(4251 -(917 + 325)))) then local v249=0 + 0 + 0 ;while true do if ((((2087 -1253) + 3039)>(283 + 59)) and (v249==(239 -(180 + 58)))) then v222=1 -0 ;break;end if (((589 + 3317)>(8595 -(13996 -8080))) and (v249==(0 + 0))) then v223=v98[5 -3 ];v224={v96[v223](v14(v96,v223 + (263 -(261 + 1 + 0)) ,v81))};v249=1307 -(963 + 343) ;end end end end else local v226=983 -(283 + 700) ;local v227;local v228;local v229;local v230;while true do if ((991<=(13237 -8371)) and (v226==(1476 -(77 + 1397)))) then for v275=v227,v81 do local v276=0;local v277;while true do if ((v276==(0 + 0)) or ((4178 -(9 + 1032))<=(4649 -(728 + 801)))) then v277=13 -(12 + 1) ;while true do if ((v277==0) or ((983 + 1271)<(1257 + 139))) then v230=v230 + (2 -1) ;v96[v275]=v228[v230];break;end end break;end end end break;end if (((11458 -9142)>=(1216 -705)) and (v226==(350 -(60 + 165 + 125)))) then local v250=0 + (1543 -(640 + 903)) ;while true do if ((v250==((1 -0) + 0)) or (2921>=(8044 -(2340 + 2649)))) then v226=(1879 -(918 + 957)) -3 ;break;end if ((2827<(5109 -(38 + 305))) and (v250==((650 -418) -(120 + 112)))) then v227=v98[2];v228,v229=v93(v96[v227](v96[v227 + (3 -2) + 0 ]));v250=1 + 0 ;end end end if (((1 + 0)==v226) or ((3366 -((1092 -661) + 210))==(4878 -(1492 + 178)))) then v81=(v229 + v227) -1 ;v230=1481 -(1266 + (1104 -(500 + 389))) ;v226=5 -3 ;end end end v80=v80 + 1 + 0 ;break;end end break;end end end end;v79=3;end if (v79==0) then v80=1;v81= -1;v79=1;end if (v79==3) then A,B=v37(v12(v84));if  not A[1] then local v103=v42[4][v80] or "?" ;error("Script error at ["   .. v103   .. "]:"   .. A[2] );else return v14(A,2,B);end break;end if (v79==1) then v82={...};v83=v13("#",...) -1 ;v79=2;end end end;end;return v39(v38(),{},v22)(...);end if (v27==1) then v30=function(v45,v46,v47)if v47 then local v87=(v45/((1661 -(867 + 792))^(v46-(1 -(1449 -(812 + 637))))))%((1199 -(905 + 292))^(((v47-(1 + 0)) -(v46-(1 + 0))) + (1 -0))) ;return v87-(v87%(159 -(117 + (934 -(97 + 796))))) ;else local v88=(1199 -(21 + 1176))^(v46-(257 -(39 + 217))) ;return (((v45%(v88 + v88))>=v88) and 1) or ((0 -0) -(1564 -(699 + 865))) ;end end;v31=nil;v31=function()local v74=v2(v21,v28,v28);v28=v28 + 1 ;return v74;end;v32=nil;v27=2;end end end;vv10(),...);break;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==2) then v9=math.ldexp;v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=3;end end end
